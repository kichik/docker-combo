name: 

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      forceUpdate:
        description: 'Build new images even if base images have not updated'
        required: true
        default: false
        type: boolean
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        combo:
          - 
        platform:
          - 

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Python requirements
        run: |
          poetry install

      - name: Build
        id: build
        run: |
          poetry run python update.py `[ ${GITHUB_REF##*/} == master ] && echo --push` ${{ matrix.combo }} --platform ${{ matrix.platform }} ${{ inputs.forceUpdate && '--force-update' || '' }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.combo_image }}
          path: output.txt

      - name: Image digests
        run: |
          # print digests for easy verification
          docker images --no-trunc
  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Get run artifacts
      id: download
      uses: actions/download-artifact@v3

    - name: Check for new images
      id: image-check
      working-directory: ${{ steps.download.outputs.download-path }}
      run:

    - name: Login to Docker Hub
      uses: docker/login-action@d398f07826957cd0a18ea1b059cf1207835e60bc
      if: ${{ steps.image-check.outputs.new_image == 'true' }}
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Create and push manifest images
      uses: Noelware/docker-manifest-action@191bad46d87f7a70c8a82054d4cf98ee8b942dca
      if: ${{ github.ref_name == 'master' && steps.image-check.outputs.new_image == 'true' }}
      with:
        base-image: 
        extra-images: 
        push: true
